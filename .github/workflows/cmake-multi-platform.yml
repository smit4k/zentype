name: Build Zentype

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # Allows manual trigger

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            artifact_name: zentype-windows
            executable_ext: .exe
          - os: ubuntu-latest
            artifact_name: zentype-linux
            executable_ext: ""
          - os: macos-latest
            artifact_name: zentype-macos
            executable_ext: ""
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          git \
          libgl1-mesa-dev \
          libx11-dev \
          libxrandr-dev \
          libxi-dev \
          libxcursor-dev \
          libxinerama-dev \
          libasound2-dev
    
    - name: Setup MSVC (Windows)
      if: runner.os == 'Windows'
      uses: microsoft/setup-msbuild@v2
    
    - name: Configure CMake
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Release
    
    - name: Build
      run: |
        cmake --build build --config Release
    
    - name: Package artifacts
      shell: bash
      run: |
        mkdir -p package
        if [ "$RUNNER_OS" == "Windows" ]; then
          cp build/bin/Release/zentype.exe package/ || cp build/bin/zentype.exe package/
          cp -r build/bin/Release/assets package/ 2>/dev/null || cp -r build/bin/assets package/ 2>/dev/null || true
        else
          cp build/bin/zentype package/
          cp -r build/bin/assets package/ 2>/dev/null || true
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: package/
        if-no-files-found: error
    
    - name: Display build info
      shell: bash
      run: |
        echo "Build completed successfully!"
        echo "OS: ${{ runner.os }}"
        echo "Artifact name: ${{ matrix.artifact_name }}"
        ls -la package/

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create archives
      run: |
        cd zentype-windows && zip -r ../zentype-windows.zip . && cd ..
        cd zentype-linux && tar czf ../zentype-linux.tar.gz . && cd ..
        cd zentype-macos && tar czf ../zentype-macos.tar.gz . && cd ..
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          zentype-windows.zip
          zentype-linux.tar.gz
          zentype-macos.tar.gz
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}